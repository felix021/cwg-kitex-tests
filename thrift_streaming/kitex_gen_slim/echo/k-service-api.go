// Code generated by Kitex v0.8.0. DO NOT EDIT.
package echo

import (
	"context"
	"fmt"

	thrift "github.com/apache/thrift/lib/go/thrift"
	streaming "github.com/cloudwego/kitex/pkg/streaming"
)

var _ context.Context
var _ fmt.State
var _ thrift.TProtocol

type EchoService interface {
	EchoBidirectional(stream EchoService_EchoBidirectionalServer) (err error)

	EchoClient(stream EchoService_EchoClientServer) (err error)

	EchoServer(req *EchoRequest, stream EchoService_EchoServerServer) (err error)

	EchoUnary(ctx context.Context, req1 *EchoRequest) (r *EchoResponse, err error)

	EchoPingPong(ctx context.Context, req1 *EchoRequest, req2 *EchoRequest) (r *EchoResponse, err error)

	EchoOneway(ctx context.Context, req1 *EchoRequest) (err error)

	Ping(ctx context.Context) (err error)
}

type EchoService_EchoBidirectionalServer interface {
	streaming.Stream

	Recv() (*EchoRequest, error)

	Send(*EchoResponse) error
}
type EchoService_EchoClientServer interface {
	streaming.Stream

	Recv() (*EchoRequest, error)

	SendAndClose(*EchoResponse) error
}
type EchoService_EchoServerServer interface {
	streaming.Stream

	Send(*EchoResponse) error
}

// exceptions of methods in EchoService.
var (
	_ error = (*EchoException)(nil)
)
